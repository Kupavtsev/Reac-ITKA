{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","s","contact","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","component","name","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","reverse","p","id","postsBlock","values","addPost","newPostElement","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.627b18e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3K36_\",\"image\":\"ProfileInfo_image__2kZQx\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3Rq1k\",\"contact\":\"ProfileInfo_contact__2SCKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2sAYn\",\"posts\":\"MyPosts_posts__Ti1m_\",\"text\":\"MyPosts_text__rUyc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__HaBlx\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n/*\r\nlet arr = [0 , {} => {}];\r\nlet [a, setA] = arr;\r\n*/\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n/*  \r\n    let stateWithSetState = useState(false);\r\n    // достаем первый элемент массива\r\n    let editMode = stateWithSetState[0];\r\n    let setEditMode = stateWithSetState[1];\r\n*/\r\n\r\n    // Синхронизируем наш Статус\r\n    // [] отрисоваться один раз\r\n    // [props.status] создаем зависимость\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <b>Status: </b>\r\n                    <span onDoubleClick={activateMode}>{props.status || 'Put your status here...'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        value={status}\r\n                        onBlur={deactivateEditMode} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n        { error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n        <div>\r\n            <b>Full name: </b>{createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n        {/* { type: \"checkbox\" } - параметр пропсов */}\r\n            <b>Looking for a job: </b>{createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        \r\n            <div>\r\n                <b>My professional skiils: </b>\r\n                {createField(\"My professional skiils\", \"lookingForAJobDescription\", [], Textarea )}\r\n            </div>\r\n        \r\n        <div>\r\n            <b>About me: </b>\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea )}\r\n        </div>\r\n\r\n         <div className={s.contact}>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts)\r\n            .map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    {/* 97 52min */}\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            }\r\n            )}\r\n    </div> \r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    // \"form\" doesn't have any connection with \"form\" in redux-store\r\n    form: 'edit-profile'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    /*If there is no \"profile\" it shows preloader*/\r\n    /*if (props.profile == null || typeOf(props.profile) == undefined)*/\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    // 97\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => { setEditMode(false) } // выходим из режима редактирования\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            {/* <div className={s.image}>\r\n                <img\r\n                    src='https://miro.medium.com/max/2800/1*WbcprlGOq8O5qVs7l-tPww.png'></img>\r\n            </div> */}\r\n            <div >\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n\r\n                {\r\n                    editMode\r\n                        ? <ProfileDataForm \r\n                            initialValues={profile}\r\n                            profile={profile} \r\n                            onSubmit={onSubmit} />\r\n                        : <ProfileData\r\n                            profile={profile}\r\n                            isOwner={isOwner}\r\n                            goToEditMode={() => { setEditMode(true) }} />\r\n                }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {\r\n            isOwner &&\r\n            <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>Full name: </b>{profile.fullName}\r\n        </div>\r\n        <div>\r\n            {/* profile.lookingForAJob - this is API data*/}\r\n            <b>Looking for a job: </b>{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {\r\n            profile.lookingForAJob &&\r\n            <div>\r\n                {/* profile.lookingForAJobDescription - this is API data*/}\r\n                <b>My professional skiils: </b>{profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            {/* profile.aboutMe - this is API data*/}\r\n            <b>About me: </b>{profile.aboutMe}\r\n        </div>\r\n        <div className={s.contact}>\r\n            {/* Object.keys() - получаем ключи свойств объекта\r\n                    return Обязательно вернуть из MAP */}\r\n            <b>Contacts</b>: {Object.keys(profile.contacts)\r\n                .map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                }\r\n                )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cdn1.iconfinder.com/data/icons/job1-1/64/businessman-job-avatar-occupation-jobs-business-trader-512.png'></img>\r\n            {props.message}\r\n      <div>\r\n        <span>like </span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostElement' placeholder={'Post message'}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: 'postAddElementForm'\r\n})(AddNewPostForm);\r\n\r\n//window.props = [];\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    /*\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps != this.props || nextState != this.state;\r\n        // return nextProps != this.props || nextState != this.state;\r\n    }\r\n    */\r\n\r\n    //console.log('Render MyPosts');\r\n    //window.props.push(this.props);\r\n\r\n    let postsElements = [...props.posts]\r\n        .reverse() //this is correct because we do copy of Array\r\n        .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n        //.reverse() WRONG for Pure Function this is mutual method !!!\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostElement);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <div>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostElement) => { dispatch(addPostActionCreator(newPostElement)) }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    //debugger;\r\n    return (\r\n      <div>\r\n          <ProfileInfo profile={props.profile}\r\n          isOwner={props.isOwner}\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n          savePhoto={props.savePhoto}\r\n          saveProfile={props.saveProfile}\r\n          />\r\n          <MyPostsContainer />\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        /*userId becuase we give this param in App.js*/\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // 80 33:00\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()        \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // 96\r\n        // We do here the same as in componentDidMount\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n        this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"Render Profile\")\r\n        return (\r\n            /*16:00 59 Lesson*/\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n// Мы ставим () вне тела функции, т.к. она возвращает объект\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}