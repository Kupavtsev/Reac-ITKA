{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","aboutMe","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","posts","reverse","map","p","postsBlock","values","addPost","newPostElement","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6ceece01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3K36_\",\"image\":\"ProfileInfo_image__2kZQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2sAYn\",\"posts\":\"MyPosts_posts__Ti1m_\",\"text\":\"MyPosts_text__rUyc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__HaBlx\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n/*\r\nlet arr = [0 , {} => {}];\r\nlet [a, setA] = arr;\r\n*/\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n/*  \r\n    let stateWithSetState = useState(false);\r\n    // достаем первый элемент массива\r\n    let editMode = stateWithSetState[0];\r\n    let setEditMode = stateWithSetState[1];\r\n*/\r\n\r\n    // Синхронизируем наш Статус\r\n    // [] отрисоваться один раз\r\n    // [props.status] создаем зависимость\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode}>{props.status || 'Put your status here...'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        value={status}\r\n                        onBlur={deactivateEditMode} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    /*If there is no \"profile\" it shows preloader*/\r\n    /*if (props.profile == null || typeOf(props.profile) == undefined)*/\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className={s.image}>\r\n                <img\r\n                    src='https://miro.medium.com/max/2800/1*WbcprlGOq8O5qVs7l-tPww.png'></img>\r\n            </div> */}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            <div>{profile.aboutMe}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cdn1.iconfinder.com/data/icons/job1-1/64/businessman-job-avatar-occupation-jobs-business-trader-512.png'></img>\r\n            {props.message}\r\n      <div>\r\n        <span>like </span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostElement' placeholder={'Post message'}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: 'postAddElementForm'\r\n})(AddNewPostForm);\r\n\r\n//window.props = [];\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    /*\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps != this.props || nextState != this.state;\r\n        // return nextProps != this.props || nextState != this.state;\r\n    }\r\n    */\r\n\r\n    console.log('Render MyPosts');\r\n    //window.props.push(this.props);\r\n\r\n    let postsElements = [...props.posts]\r\n        .reverse() //this is correct because we do copy of Array\r\n        .map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n        //.reverse() WRONG for Pure Function this is mutual method !!!\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostElement);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <div>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostElement) => { dispatch(addPostActionCreator(newPostElement)) }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    //debugger;\r\n    return (\r\n      <div>\r\n          <ProfileInfo profile={props.profile}\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n          />\r\n          <MyPostsContainer />\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        /*userId becuase we give this param in App.js*/\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // 80 33:00\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"Render Profile\")\r\n        return (\r\n            /*16:00 59 Lesson*/\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n// Мы ставим () вне тела функции, т.к. она возвращает объект\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)\r\n    (ProfileContainer);"],"sourceRoot":""}